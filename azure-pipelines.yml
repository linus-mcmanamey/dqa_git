trigger:
- main
- develop

variables:
- group: dm_d9_variable_group
- group: dm_d9_database_and_tables_lists
- name: allowScriptsAccessToken
  value: true
- name: containerName
  value: 'synapse-fs'

pool:
  name: AuE-Atlas-DataMigration
  demands:
    - agent.name -equals DATDEVSHIR1-Build

  # Azure Storage Account Configuration


stages:
- stage: DataQualityAssessment
  displayName: 'Data Quality Assessment'
  jobs:
  - job: RunTests
    displayName: 'Run Data Quality Tests'
    steps:
    - checkout: self
      persistCredentials: true

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(PYTHON_VERSION)'
      displayName: 'Use Python $(PYTHON_VERSION)'

    # - script: |
    #     python -m pip install --upgrade pip
    #     python -m pip install uv
    #     uv sync --frozen
    #   displayName: 'Install dependencies'

    - task: AzureCLI@2
      displayName: 'Setup Azure Authentication'
      inputs:
        azureSubscription: $(SERVICE_CONNECTION_NAME)
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
            # Method 1: Try to get storage account key (simpler approach)
            try {
                Write-Host "Attempting to get storage account key..."
                $storageKey = az storage account keys list --account-name $(STORAGE_ACCOUNT) --query '[0].value' --output tsv
                if ($storageKey) {
                    Write-Host "Successfully obtained storage account key"
                    $env:AZURE_STORAGE_ACCOUNT_KEY = $storageKey
                    $env:AZURE_STORAGE_AUTH_TYPE = "SharedKey"
                } else {
                    throw "Failed to get storage key"
                }
            } catch {
                Write-Host "Storage key approach failed, trying access token..."
                # Method 2: Fallback to access token
                $env:AZURE_STORAGE_ACCESS_TOKEN = az account get-access-token --resource https://storage.azure.com/ --query accessToken --output tsv
                $env:AZURE_STORAGE_AUTH_TYPE = "OAuth"
                Write-Host "Using OAuth access token"
            }

            # Set common environment variables
            $env:AZURE_TENANT_ID = az account show --query tenantId --output tsv
            $env:STORAGE_ACCOUNT = "$(STORAGE_ACCOUNT)"

            Write-Host "Azure authentication configured:"
            Write-Host "Auth Type: $env:AZURE_STORAGE_AUTH_TYPE"
            Write-Host "Tenant ID: $env:AZURE_TENANT_ID"
            Write-Host "Storage Account: $env:STORAGE_ACCOUNT"
            Write-Host "Key available: $(if ($env:AZURE_STORAGE_ACCOUNT_KEY) { 'Yes' } else { 'No' })"
            Write-Host "Token available: $(if ($env:AZURE_STORAGE_ACCESS_TOKEN) { 'Yes' } else { 'No' })"
        addSpnToEnvironment: true
